# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: osprey-backend
  namespace: osprey-production
  labels:
    app: osprey-backend
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: osprey-backend
  template:
    metadata:
      labels:
        app: osprey-backend
        component: backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/osprey/osprey-backend:latest
        ports:
        - containerPort: 8001
        env:
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: osprey-secrets
              key: mongo-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: osprey-secrets
              key: jwt-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: osprey-secrets
              key: openai-api-key
        envFrom:
        - configMapRef:
            name: osprey-config
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /api/production/system/health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/production/system/health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: osprey-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: osprey-logs-pvc

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: osprey-frontend
  namespace: osprey-production
  labels:
    app: osprey-frontend
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: osprey-frontend
  template:
    metadata:
      labels:
        app: osprey-frontend
        component: frontend
    spec:
      containers:
      - name: frontend
        image: ghcr.io/osprey/osprey-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_BACKEND_URL
          value: "https://api.osprey.com"
        envFrom:
        - configMapRef:
            name: osprey-config
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: osprey-mongodb
  namespace: osprey-production
  labels:
    app: osprey-mongodb
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: osprey-mongodb
  template:
    metadata:
      labels:
        app: osprey-mongodb
        component: database
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: osprey-secrets
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: osprey-secrets
              key: mongo-root-password
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: osprey-config
              key: MONGO_DB
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /data/configdb
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: osprey-mongodb-pvc
      - name: mongodb-config
        persistentVolumeClaim:
          claimName: osprey-mongodb-config-pvc